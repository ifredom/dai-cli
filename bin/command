#!/usr/bin/env node --harmony

'use strict';
var extend = require('extend');
var chalk = require('chalk');
const exec = require('child_process').exec;
const co = require('co');
const prompt = require('co-prompt');
const download = require('download-git-repo');

const templates = require('../templates');

// Defining the scaffolding path
process.env.NODE_PATH = __dirname + '/../node_modules';

const commander = require('commander');

// Defining the current version
commander.version(require('../package').version, '-v, --version');

// Definition instruction
commander
  .command('init <templateName>')
  .description('choose a template for init')
  .option('init')
  // .alias('i')
  .action((templateName) => {
    require('../command/init')(templateName)
  });

commander
  .command('list')
  .description('All available templates list')
  .action(() => {
    // onList();
    require('../command/list')()
    exit();
  });

//   commander
//   .command('add')
//   .description('add self\'s template')
//   // .alias('a')
//   .action(require('../command/add'));
// commander
//   .command('del')
//   .description('del template')
//   // .alias('d')
//   .action(require('../command/del'));
// commander
//   .command('syc')
//   .description('syc template')
//   // .alias('s')
//   .action(require('../command/syc'));

commander.parse(process.argv);

// ========command function=========

if (commander.init) console.log('  - peppers');

if (process.argv.length === 2) {
  commander.outputHelp();
}

function exit() {
  process.exit(0);
}

function errExit() {
  process.exit(1);
}

// refer to [command] https://github.com/tj/commander.js/
// refer to [nrm]     https://github.com/Pana/nrm/blob/master/cli.js
// refer to [scion]   https://segmentfault.com/a/1190000006190814?utm_source=weekly&utm_medium=email&utm_campaign=email_weekly#articleHeader0